{"id":"mHSh","dependencies":[{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\valid.js.map","includedInParent":true,"mtime":1742306052379},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\package.json","includedInParent":true,"mtime":1742305948236},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\package.json","includedInParent":true,"mtime":1742306051652},{"name":"../util/pretty","loc":{"line":19,"column":25,"index":903},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\valid.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\util\\pretty.js"},{"name":"../util/compat","loc":{"line":20,"column":25,"index":947},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\valid.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\util\\compat.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"../util/pretty\"),t=require(\"../util/compat\");function n(e){if(!e||e.length<=0)return function(e){return!0};let t=\"\",n=e.filter(e=>e==e);return n.length>0&&(t=`\\n    switch (x) {${n.map(e=>`\\n        case ${r(e)}:`).join(\"\")}\\n            return false;\\n    }`),e.length!==n.length&&(t=`if (x !== x) return false;\\n${t}`),new Function(\"x\",`${t}\\nreturn true;`)}function r(n){return\"bigint\"!=typeof n?e.valueToString(n):t.BigIntAvailable?`${e.valueToString(n)}n`:`\"${e.valueToString(n)}\"`}exports.createIsValidFunction=n;"},"sourceMaps":{"js":{"mappings":[{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":68}},{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":74}},{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":76}},{"source":"builder/valid.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":84}},{"source":"builder/valid.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":102}},{"source":"builder/valid.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":104}},{"source":"builder/valid.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":112}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":130}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":16},"generated":{"line":1,"column":139}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":77},"generated":{"line":1,"column":141}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":1,"column":144}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":9},"generated":{"line":1,"column":148}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":23},"generated":{"line":1,"column":151}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":34},"generated":{"line":1,"column":153}},{"source":"builder/valid.ts","name":null,"original":{"line":44,"column":44},"generated":{"line":1,"column":161}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":1,"column":163}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":15},"generated":{"line":1,"column":170}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":32},"generated":{"line":1,"column":179}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":46},"generated":{"line":1,"column":182}},{"source":"builder/valid.ts","name":null,"original":{"line":46,"column":53},"generated":{"line":1,"column":189}},{"source":"builder/valid.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":1,"column":192}},{"source":"builder/valid.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":196}},{"source":"builder/valid.ts","name":null,"original":{"line":49,"column":17},"generated":{"line":1,"column":198}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":8},"generated":{"line":1,"column":201}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":17},"generated":{"line":1,"column":203}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":28},"generated":{"line":1,"column":205}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":36},"generated":{"line":1,"column":212}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":42},"generated":{"line":1,"column":215}},{"source":"builder/valid.ts","name":null,"original":{"line":50,"column":48},"generated":{"line":1,"column":218}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":4},"generated":{"line":1,"column":221}},{"source":"builder/valid.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":1,"column":228}},{"source":"builder/valid.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":1,"column":230}},{"source":"builder/valid.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":1,"column":237}},{"source":"builder/valid.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":1,"column":241}},{"source":"builder/valid.ts","name":null,"original":{"line":54,"column":18},"generated":{"line":1,"column":264}},{"source":"builder/valid.ts","name":null,"original":{"line":54,"column":25},"generated":{"line":1,"column":266}},{"source":"builder/valid.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":1,"column":270}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":1,"column":291}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":27},"generated":{"line":1,"column":293}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":1,"column":300}},{"source":"builder/valid.ts","name":null,"original":{"line":55,"column":39},"generated":{"line":1,"column":305}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":346}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":19},"generated":{"line":1,"column":348}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":30},"generated":{"line":1,"column":357}},{"source":"builder/valid.ts","name":null,"original":{"line":62,"column":37},"generated":{"line":1,"column":359}},{"source":"builder/valid.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":368}},{"source":"builder/valid.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":1,"column":401}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":11},"generated":{"line":1,"column":406}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":1,"column":410}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":24},"generated":{"line":1,"column":419}},{"source":"builder/valid.ts","name":null,"original":{"line":66,"column":32},"generated":{"line":1,"column":426}},{"source":"builder/valid.ts","name":null,"original":{"line":70,"column":0},"generated":{"line":1,"column":445}},{"source":"builder/valid.ts","name":null,"original":{"line":70,"column":9},"generated":{"line":1,"column":454}},{"source":"builder/valid.ts","name":null,"original":{"line":70,"column":21},"generated":{"line":1,"column":456}},{"source":"builder/valid.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":1,"column":459}},{"source":"builder/valid.ts","name":null,"original":{"line":71,"column":21},"generated":{"line":1,"column":465}},{"source":"builder/valid.ts","name":null,"original":{"line":71,"column":15},"generated":{"line":1,"column":482}},{"source":"builder/valid.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":484}},{"source":"builder/valid.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":486}},{"source":"builder/valid.ts","name":null,"original":{"line":72,"column":29},"generated":{"line":1,"column":500}},{"source":"builder/valid.ts","name":null,"original":{"line":73,"column":15},"generated":{"line":1,"column":503}},{"source":"builder/valid.ts","name":null,"original":{"line":73,"column":15},"generated":{"line":1,"column":505}},{"source":"builder/valid.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":524}},{"source":"builder/valid.ts","name":null,"original":{"line":74,"column":18},"generated":{"line":1,"column":526}},{"source":"builder/valid.ts","name":null,"original":{"line":74,"column":32},"generated":{"line":1,"column":540}},{"source":"builder/valid.ts","name":null,"original":{"line":76,"column":15},"generated":{"line":1,"column":550}},{"source":"builder/valid.ts","name":null,"original":{"line":76,"column":15},"generated":{"line":1,"column":552}},{"source":"builder/valid.ts","name":null,"original":{"line":76,"column":29},"generated":{"line":1,"column":566}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":572}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":580}},{"source":"builder/valid.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":602}}],"sources":{"builder/valid.ts":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n"},"lineCount":null}},"error":null,"hash":"ea85ab5157d9e520d83600f1b000be1c","cacheData":{"env":{}}}