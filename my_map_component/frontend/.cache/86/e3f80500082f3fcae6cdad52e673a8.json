{"id":"H4kh","dependencies":[{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js.map","includedInParent":true,"mtime":1742306051878},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\package.json","includedInParent":true,"mtime":1742305948236},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\package.json","includedInParent":true,"mtime":1742306051652},{"name":"./vector","loc":{"line":19,"column":25,"index":903},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\vector.js"},{"name":"./enum","loc":{"line":20,"column":23,"index":939},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\enum.js"},{"name":"./data","loc":{"line":21,"column":23,"index":973},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\data.js"},{"name":"./builder/valid","loc":{"line":22,"column":24,"index":1008},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\valid.js"},{"name":"./builder/buffer","loc":{"line":23,"column":25,"index":1053},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\buffer.js"},{"name":"./type","loc":{"line":24,"column":23,"index":1097},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\type.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"./vector\"),t=require(\"./enum\"),s=require(\"./data\"),i=require(\"./builder/valid\"),n=require(\"./builder/buffer\"),r=require(\"./type\");class h{constructor({type:e,nullValues:t}){this.length=0,this.finished=!1,this.type=e,this.children=[],this.nullValues=t,this.stride=r.strideForType(e),this._nulls=new n.BitmapBufferBuilder,t&&t.length>0&&(this._isValid=i.createIsValidFunction(t))}static new(e){}static throughNode(e){throw new Error('\"throughNode\" not available in this environment')}static throughDOM(e){throw new Error('\"throughDOM\" not available in this environment')}static throughIterable(e){return d(e)}static throughAsyncIterable(e){return o(e)}toVector(){return e.Vector.new(this.flush())}get ArrayType(){return this.type.ArrayType}get nullCount(){return this._nulls.numInvalid}get numChildren(){return this.children.length}get byteLength(){let e=0;return this._offsets&&(e+=this._offsets.byteLength),this._values&&(e+=this._values.byteLength),this._nulls&&(e+=this._nulls.byteLength),this._typeIds&&(e+=this._typeIds.byteLength),this.children.reduce((e,t)=>e+t.byteLength,e)}get reservedLength(){return this._nulls.reservedLength}get reservedByteLength(){let e=0;return this._offsets&&(e+=this._offsets.reservedByteLength),this._values&&(e+=this._values.reservedByteLength),this._nulls&&(e+=this._nulls.reservedByteLength),this._typeIds&&(e+=this._typeIds.reservedByteLength),this.children.reduce((e,t)=>e+t.reservedByteLength,e)}get valueOffsets(){return this._offsets?this._offsets.buffer:null}get values(){return this._values?this._values.buffer:null}get nullBitmap(){return this._nulls?this._nulls.buffer:null}get typeIds(){return this._typeIds?this._typeIds.buffer:null}append(e){return this.set(this.length,e)}isValid(e){return this._isValid(e)}set(e,t){return this.setValid(e,this.isValid(t))&&this.setValue(e,t),this}setValue(e,t){this._setValue(this,e,t)}setValid(e,t){return this.length=this._nulls.set(e,+t).length,t}addChild(e,t=`${this.numChildren}`){throw new Error(`Cannot append children to non-nested type \"${this.type}\"`)}getChildAt(e){return this.children[e]||null}flush(){const e=[],i=this._values,n=this._offsets,r=this._typeIds,{length:h,nullCount:l}=this;r?(e[t.BufferType.TYPE]=r.flush(h),n&&(e[t.BufferType.OFFSET]=n.flush(h))):n?(i&&(e[t.BufferType.DATA]=i.flush(n.last())),e[t.BufferType.OFFSET]=n.flush(h)):i&&(e[t.BufferType.DATA]=i.flush(h)),l>0&&(e[t.BufferType.VALIDITY]=this._nulls.flush(h));const u=s.Data.new(this.type,0,h,l,e,this.children.map(e=>e.flush()));return this.clear(),u}finish(){return this.finished=!0,this.children.forEach(e=>e.finish()),this}clear(){return this.length=0,this._offsets&&this._offsets.clear(),this._values&&this._values.clear(),this._nulls&&this._nulls.clear(),this._typeIds&&this._typeIds.clear(),this.children.forEach(e=>e.clear()),this}}exports.Builder=h,h.prototype.length=1,h.prototype.stride=1,h.prototype.children=null,h.prototype.finished=!1,h.prototype.nullValues=null,h.prototype._isValid=(()=>!0);class l extends h{constructor(e){super(e),this._values=new n.DataBufferBuilder(new this.ArrayType(0),this.stride)}setValue(e,t){const s=this._values;return s.reserve(e-s.length+1),super.setValue(e,t)}}exports.FixedWidthBuilder=l;class u extends h{constructor(e){super(e),this._pendingLength=0,this._offsets=new n.OffsetsBufferBuilder}setValue(e,t){const s=this._pending||(this._pending=new Map),i=s.get(e);i&&(this._pendingLength-=i.length),this._pendingLength+=t.length,s.set(e,t)}setValid(e,t){return!!super.setValid(e,t)||((this._pending||(this._pending=new Map)).set(e,void 0),!1)}clear(){return this._pendingLength=0,this._pending=void 0,super.clear()}flush(){return this._flush(),super.flush()}finish(){return this._flush(),super.finish()}_flush(){const e=this._pending,t=this._pendingLength;return this._pendingLength=0,this._pending=void 0,e&&e.size>0&&this._flushPending(e,t),this}}function d(e){const{queueingStrategy:t=\"count\"}=e,{highWaterMark:s=(\"bytes\"!==t?1e3:16384)}=e,i=\"bytes\"!==t?\"length\":\"byteLength\";return function*(t){let n=0,r=h.new(e);for(const e of t)r.append(e)[i]>=s&&++n&&(yield r.toVector());(r.finish().length>0||0===n)&&(yield r.toVector())}}function o(e){const{queueingStrategy:t=\"count\"}=e,{highWaterMark:s=(\"bytes\"!==t?1e3:16384)}=e,i=\"bytes\"!==t?\"length\":\"byteLength\";return async function*(t){let n=0,r=h.new(e);for await(const e of t)r.append(e)[i]>=s&&++n&&(yield r.toVector());(r.finish().length>0||0===n)&&(yield r.toVector())}}exports.VariableWidthBuilder=u;"},"sourceMaps":{"js":{"mappings":[{"source":"builder.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":68}},{"source":"builder.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":74}},{"source":"builder.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":76}},{"source":"builder.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":84}},{"source":"builder.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":96}},{"source":"builder.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":98}},{"source":"builder.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":106}},{"source":"builder.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":116}},{"source":"builder.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":118}},{"source":"builder.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":126}},{"source":"builder.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":136}},{"source":"builder.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":138}},{"source":"builder.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":1,"column":146}},{"source":"builder.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":165}},{"source":"builder.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":167}},{"source":"builder.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":175}},{"source":"builder.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":195}},{"source":"builder.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":197}},{"source":"builder.ts","name":null,"original":{"line":24,"column":0},"generated":{"line":1,"column":205}},{"source":"builder.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":1,"column":215}},{"source":"builder.ts","name":null,"original":{"line":110,"column":22},"generated":{"line":1,"column":221}},{"source":"builder.ts","name":null,"original":{"line":197,"column":4},"generated":{"line":1,"column":223}},{"source":"builder.ts","name":null,"original":{"line":197,"column":18},"generated":{"line":1,"column":236}},{"source":"builder.ts","name":null,"original":{"line":197,"column":26},"generated":{"line":1,"column":241}},{"source":"builder.ts","name":null,"original":{"line":197,"column":32},"generated":{"line":1,"column":243}},{"source":"builder.ts","name":null,"original":{"line":197,"column":46},"generated":{"line":1,"column":254}},{"source":"builder.ts","name":null,"original":{"line":217,"column":11},"generated":{"line":1,"column":258}},{"source":"builder.ts","name":null,"original":{"line":217,"column":11},"generated":{"line":1,"column":263}},{"source":"builder.ts","name":null,"original":{"line":217,"column":20},"generated":{"line":1,"column":270}},{"source":"builder.ts","name":null,"original":{"line":222,"column":11},"generated":{"line":1,"column":272}},{"source":"builder.ts","name":null,"original":{"line":222,"column":11},"generated":{"line":1,"column":277}},{"source":"builder.ts","name":null,"original":{"line":222,"column":22},"generated":{"line":1,"column":287}},{"source":"builder.ts","name":null,"original":{"line":198,"column":8},"generated":{"line":1,"column":289}},{"source":"builder.ts","name":null,"original":{"line":198,"column":13},"generated":{"line":1,"column":294}},{"source":"builder.ts","name":null,"original":{"line":198,"column":20},"generated":{"line":1,"column":299}},{"source":"builder.ts","name":null,"original":{"line":199,"column":8},"generated":{"line":1,"column":301}},{"source":"builder.ts","name":null,"original":{"line":199,"column":13},"generated":{"line":1,"column":306}},{"source":"builder.ts","name":null,"original":{"line":199,"column":24},"generated":{"line":1,"column":315}},{"source":"builder.ts","name":null,"original":{"line":200,"column":8},"generated":{"line":1,"column":318}},{"source":"builder.ts","name":null,"original":{"line":200,"column":13},"generated":{"line":1,"column":323}},{"source":"builder.ts","name":null,"original":{"line":200,"column":26},"generated":{"line":1,"column":334}},{"source":"builder.ts","name":null,"original":{"line":201,"column":8},"generated":{"line":1,"column":336}},{"source":"builder.ts","name":null,"original":{"line":201,"column":13},"generated":{"line":1,"column":341}},{"source":"builder.ts","name":null,"original":{"line":201,"column":22},"generated":{"line":1,"column":348}},{"source":"builder.ts","name":null,"original":{"line":201,"column":22},"generated":{"line":1,"column":350}},{"source":"builder.ts","name":null,"original":{"line":201,"column":36},"generated":{"line":1,"column":364}},{"source":"builder.ts","name":null,"original":{"line":202,"column":8},"generated":{"line":1,"column":367}},{"source":"builder.ts","name":null,"original":{"line":202,"column":13},"generated":{"line":1,"column":372}},{"source":"builder.ts","name":null,"original":{"line":202,"column":22},"generated":{"line":1,"column":379}},{"source":"builder.ts","name":null,"original":{"line":202,"column":26},"generated":{"line":1,"column":383}},{"source":"builder.ts","name":null,"original":{"line":202,"column":26},"generated":{"line":1,"column":385}},{"source":"builder.ts","name":null,"original":{"line":203,"column":12},"generated":{"line":1,"column":405}},{"source":"builder.ts","name":null,"original":{"line":203,"column":21},"generated":{"line":1,"column":408}},{"source":"builder.ts","name":null,"original":{"line":203,"column":27},"generated":{"line":1,"column":410}},{"source":"builder.ts","name":null,"original":{"line":203,"column":36},"generated":{"line":1,"column":417}},{"source":"builder.ts","name":null,"original":{"line":204,"column":12},"generated":{"line":1,"column":421}},{"source":"builder.ts","name":null,"original":{"line":204,"column":17},"generated":{"line":1,"column":426}},{"source":"builder.ts","name":null,"original":{"line":204,"column":28},"generated":{"line":1,"column":435}},{"source":"builder.ts","name":null,"original":{"line":204,"column":28},"generated":{"line":1,"column":437}},{"source":"builder.ts","name":null,"original":{"line":204,"column":50},"generated":{"line":1,"column":459}},{"source":"builder.ts","name":null,"original":{"line":122,"column":11},"generated":{"line":1,"column":463}},{"source":"builder.ts","name":null,"original":{"line":122,"column":61},"generated":{"line":1,"column":474}},{"source":"builder.ts","name":null,"original":{"line":126,"column":11},"generated":{"line":1,"column":478}},{"source":"builder.ts","name":null,"original":{"line":126,"column":69},"generated":{"line":1,"column":497}},{"source":"builder.ts","name":null,"original":{"line":127,"column":8},"generated":{"line":1,"column":500}},{"source":"builder.ts","name":null,"original":{"line":127,"column":14},"generated":{"line":1,"column":506}},{"source":"builder.ts","name":null,"original":{"line":127,"column":18},"generated":{"line":1,"column":510}},{"source":"builder.ts","name":null,"original":{"line":127,"column":24},"generated":{"line":1,"column":516}},{"source":"builder.ts","name":null,"original":{"line":131,"column":11},"generated":{"line":1,"column":567}},{"source":"builder.ts","name":null,"original":{"line":131,"column":68},"generated":{"line":1,"column":585}},{"source":"builder.ts","name":null,"original":{"line":132,"column":8},"generated":{"line":1,"column":588}},{"source":"builder.ts","name":null,"original":{"line":132,"column":14},"generated":{"line":1,"column":594}},{"source":"builder.ts","name":null,"original":{"line":132,"column":18},"generated":{"line":1,"column":598}},{"source":"builder.ts","name":null,"original":{"line":132,"column":24},"generated":{"line":1,"column":604}},{"source":"builder.ts","name":null,"original":{"line":159,"column":11},"generated":{"line":1,"column":654}},{"source":"builder.ts","name":null,"original":{"line":159,"column":73},"generated":{"line":1,"column":677}},{"source":"builder.ts","name":null,"original":{"line":160,"column":8},"generated":{"line":1,"column":680}},{"source":"builder.ts","name":null,"original":{"line":160,"column":15},"generated":{"line":1,"column":687}},{"source":"builder.ts","name":null,"original":{"line":160,"column":31},"generated":{"line":1,"column":689}},{"source":"builder.ts","name":null,"original":{"line":188,"column":11},"generated":{"line":1,"column":692}},{"source":"builder.ts","name":null,"original":{"line":188,"column":78},"generated":{"line":1,"column":720}},{"source":"builder.ts","name":null,"original":{"line":189,"column":8},"generated":{"line":1,"column":723}},{"source":"builder.ts","name":null,"original":{"line":189,"column":15},"generated":{"line":1,"column":730}},{"source":"builder.ts","name":null,"original":{"line":189,"column":36},"generated":{"line":1,"column":732}},{"source":"builder.ts","name":null,"original":{"line":245,"column":11},"generated":{"line":1,"column":735}},{"source":"builder.ts","name":null,"original":{"line":245,"column":24},"generated":{"line":1,"column":746}},{"source":"builder.ts","name":null,"original":{"line":245,"column":31},"generated":{"line":1,"column":753}},{"source":"builder.ts","name":null,"original":{"line":245,"column":31},"generated":{"line":1,"column":755}},{"source":"builder.ts","name":null,"original":{"line":245,"column":38},"generated":{"line":1,"column":762}},{"source":"builder.ts","name":null,"original":{"line":245,"column":42},"generated":{"line":1,"column":766}},{"source":"builder.ts","name":null,"original":{"line":245,"column":47},"generated":{"line":1,"column":771}},{"source":"builder.ts","name":null,"original":{"line":247,"column":4},"generated":{"line":1,"column":780}},{"source":"builder.ts","name":null,"original":{"line":247,"column":29},"generated":{"line":1,"column":796}},{"source":"builder.ts","name":null,"original":{"line":247,"column":36},"generated":{"line":1,"column":803}},{"source":"builder.ts","name":null,"original":{"line":247,"column":41},"generated":{"line":1,"column":808}},{"source":"builder.ts","name":null,"original":{"line":247,"column":46},"generated":{"line":1,"column":813}},{"source":"builder.ts","name":null,"original":{"line":248,"column":4},"generated":{"line":1,"column":823}},{"source":"builder.ts","name":null,"original":{"line":248,"column":29},"generated":{"line":1,"column":839}},{"source":"builder.ts","name":null,"original":{"line":248,"column":36},"generated":{"line":1,"column":846}},{"source":"builder.ts","name":null,"original":{"line":248,"column":41},"generated":{"line":1,"column":851}},{"source":"builder.ts","name":null,"original":{"line":248,"column":48},"generated":{"line":1,"column":858}},{"source":"builder.ts","name":null,"original":{"line":249,"column":4},"generated":{"line":1,"column":869}},{"source":"builder.ts","name":null,"original":{"line":249,"column":31},"generated":{"line":1,"column":887}},{"source":"builder.ts","name":null,"original":{"line":249,"column":38},"generated":{"line":1,"column":894}},{"source":"builder.ts","name":null,"original":{"line":249,"column":43},"generated":{"line":1,"column":899}},{"source":"builder.ts","name":null,"original":{"line":249,"column":52},"generated":{"line":1,"column":908}},{"source":"builder.ts","name":null,"original":{"line":254,"column":4},"generated":{"line":1,"column":915}},{"source":"builder.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":1,"column":932}},{"source":"builder.ts","name":null,"original":{"line":255,"column":12},"generated":{"line":1,"column":936}},{"source":"builder.ts","name":null,"original":{"line":255,"column":19},"generated":{"line":1,"column":938}},{"source":"builder.ts","name":null,"original":{"line":260,"column":8},"generated":{"line":1,"column":940}},{"source":"builder.ts","name":null,"original":{"line":256,"column":8},"generated":{"line":1,"column":947}},{"source":"builder.ts","name":null,"original":{"line":256,"column":13},"generated":{"line":1,"column":952}},{"source":"builder.ts","name":null,"original":{"line":256,"column":26},"generated":{"line":1,"column":963}},{"source":"builder.ts","name":null,"original":{"line":256,"column":34},"generated":{"line":1,"column":966}},{"source":"builder.ts","name":null,"original":{"line":256,"column":39},"generated":{"line":1,"column":971}},{"source":"builder.ts","name":null,"original":{"line":256,"column":48},"generated":{"line":1,"column":980}},{"source":"builder.ts","name":null,"original":{"line":257,"column":8},"generated":{"line":1,"column":992}},{"source":"builder.ts","name":null,"original":{"line":257,"column":13},"generated":{"line":1,"column":997}},{"source":"builder.ts","name":null,"original":{"line":257,"column":25},"generated":{"line":1,"column":1007}},{"source":"builder.ts","name":null,"original":{"line":257,"column":33},"generated":{"line":1,"column":1010}},{"source":"builder.ts","name":null,"original":{"line":257,"column":38},"generated":{"line":1,"column":1015}},{"source":"builder.ts","name":null,"original":{"line":257,"column":46},"generated":{"line":1,"column":1023}},{"source":"builder.ts","name":null,"original":{"line":258,"column":8},"generated":{"line":1,"column":1035}},{"source":"builder.ts","name":null,"original":{"line":258,"column":13},"generated":{"line":1,"column":1040}},{"source":"builder.ts","name":null,"original":{"line":258,"column":24},"generated":{"line":1,"column":1049}},{"source":"builder.ts","name":null,"original":{"line":258,"column":32},"generated":{"line":1,"column":1052}},{"source":"builder.ts","name":null,"original":{"line":258,"column":37},"generated":{"line":1,"column":1057}},{"source":"builder.ts","name":null,"original":{"line":258,"column":44},"generated":{"line":1,"column":1064}},{"source":"builder.ts","name":null,"original":{"line":259,"column":8},"generated":{"line":1,"column":1076}},{"source":"builder.ts","name":null,"original":{"line":259,"column":13},"generated":{"line":1,"column":1081}},{"source":"builder.ts","name":null,"original":{"line":259,"column":26},"generated":{"line":1,"column":1092}},{"source":"builder.ts","name":null,"original":{"line":259,"column":34},"generated":{"line":1,"column":1095}},{"source":"builder.ts","name":null,"original":{"line":259,"column":39},"generated":{"line":1,"column":1100}},{"source":"builder.ts","name":null,"original":{"line":259,"column":48},"generated":{"line":1,"column":1109}},{"source":"builder.ts","name":null,"original":{"line":260,"column":15},"generated":{"line":1,"column":1121}},{"source":"builder.ts","name":null,"original":{"line":260,"column":20},"generated":{"line":1,"column":1126}},{"source":"builder.ts","name":null,"original":{"line":260,"column":29},"generated":{"line":1,"column":1135}},{"source":"builder.ts","name":null,"original":{"line":260,"column":36},"generated":{"line":1,"column":1142}},{"source":"builder.ts","name":null,"original":{"line":260,"column":37},"generated":{"line":1,"column":1143}},{"source":"builder.ts","name":null,"original":{"line":260,"column":43},"generated":{"line":1,"column":1145}},{"source":"builder.ts","name":null,"original":{"line":260,"column":53},"generated":{"line":1,"column":1149}},{"source":"builder.ts","name":null,"original":{"line":260,"column":60},"generated":{"line":1,"column":1151}},{"source":"builder.ts","name":null,"original":{"line":260,"column":66},"generated":{"line":1,"column":1153}},{"source":"builder.ts","name":null,"original":{"line":260,"column":78},"generated":{"line":1,"column":1164}},{"source":"builder.ts","name":null,"original":{"line":266,"column":4},"generated":{"line":1,"column":1167}},{"source":"builder.ts","name":null,"original":{"line":267,"column":8},"generated":{"line":1,"column":1188}},{"source":"builder.ts","name":null,"original":{"line":267,"column":15},"generated":{"line":1,"column":1195}},{"source":"builder.ts","name":null,"original":{"line":267,"column":20},"generated":{"line":1,"column":1200}},{"source":"builder.ts","name":null,"original":{"line":267,"column":27},"generated":{"line":1,"column":1207}},{"source":"builder.ts","name":null,"original":{"line":273,"column":4},"generated":{"line":1,"column":1222}},{"source":"builder.ts","name":null,"original":{"line":274,"column":8},"generated":{"line":1,"column":1247}},{"source":"builder.ts","name":null,"original":{"line":274,"column":12},"generated":{"line":1,"column":1251}},{"source":"builder.ts","name":null,"original":{"line":274,"column":19},"generated":{"line":1,"column":1253}},{"source":"builder.ts","name":null,"original":{"line":279,"column":8},"generated":{"line":1,"column":1255}},{"source":"builder.ts","name":null,"original":{"line":275,"column":8},"generated":{"line":1,"column":1262}},{"source":"builder.ts","name":null,"original":{"line":275,"column":13},"generated":{"line":1,"column":1267}},{"source":"builder.ts","name":null,"original":{"line":275,"column":26},"generated":{"line":1,"column":1278}},{"source":"builder.ts","name":null,"original":{"line":275,"column":34},"generated":{"line":1,"column":1281}},{"source":"builder.ts","name":null,"original":{"line":275,"column":39},"generated":{"line":1,"column":1286}},{"source":"builder.ts","name":null,"original":{"line":275,"column":48},"generated":{"line":1,"column":1295}},{"source":"builder.ts","name":null,"original":{"line":276,"column":8},"generated":{"line":1,"column":1315}},{"source":"builder.ts","name":null,"original":{"line":276,"column":13},"generated":{"line":1,"column":1320}},{"source":"builder.ts","name":null,"original":{"line":276,"column":25},"generated":{"line":1,"column":1330}},{"source":"builder.ts","name":null,"original":{"line":276,"column":33},"generated":{"line":1,"column":1333}},{"source":"builder.ts","name":null,"original":{"line":276,"column":38},"generated":{"line":1,"column":1338}},{"source":"builder.ts","name":null,"original":{"line":276,"column":46},"generated":{"line":1,"column":1346}},{"source":"builder.ts","name":null,"original":{"line":277,"column":8},"generated":{"line":1,"column":1366}},{"source":"builder.ts","name":null,"original":{"line":277,"column":13},"generated":{"line":1,"column":1371}},{"source":"builder.ts","name":null,"original":{"line":277,"column":24},"generated":{"line":1,"column":1380}},{"source":"builder.ts","name":null,"original":{"line":277,"column":32},"generated":{"line":1,"column":1383}},{"source":"builder.ts","name":null,"original":{"line":277,"column":37},"generated":{"line":1,"column":1388}},{"source":"builder.ts","name":null,"original":{"line":277,"column":44},"generated":{"line":1,"column":1395}},{"source":"builder.ts","name":null,"original":{"line":278,"column":8},"generated":{"line":1,"column":1415}},{"source":"builder.ts","name":null,"original":{"line":278,"column":13},"generated":{"line":1,"column":1420}},{"source":"builder.ts","name":null,"original":{"line":278,"column":26},"generated":{"line":1,"column":1431}},{"source":"builder.ts","name":null,"original":{"line":278,"column":34},"generated":{"line":1,"column":1434}},{"source":"builder.ts","name":null,"original":{"line":278,"column":39},"generated":{"line":1,"column":1439}},{"source":"builder.ts","name":null,"original":{"line":278,"column":48},"generated":{"line":1,"column":1448}},{"source":"builder.ts","name":null,"original":{"line":279,"column":15},"generated":{"line":1,"column":1468}},{"source":"builder.ts","name":null,"original":{"line":279,"column":20},"generated":{"line":1,"column":1473}},{"source":"builder.ts","name":null,"original":{"line":279,"column":29},"generated":{"line":1,"column":1482}},{"source":"builder.ts","name":null,"original":{"line":279,"column":36},"generated":{"line":1,"column":1489}},{"source":"builder.ts","name":null,"original":{"line":279,"column":37},"generated":{"line":1,"column":1490}},{"source":"builder.ts","name":null,"original":{"line":279,"column":43},"generated":{"line":1,"column":1492}},{"source":"builder.ts","name":null,"original":{"line":279,"column":53},"generated":{"line":1,"column":1496}},{"source":"builder.ts","name":null,"original":{"line":279,"column":60},"generated":{"line":1,"column":1498}},{"source":"builder.ts","name":null,"original":{"line":279,"column":66},"generated":{"line":1,"column":1500}},{"source":"builder.ts","name":null,"original":{"line":279,"column":86},"generated":{"line":1,"column":1519}},{"source":"builder.ts","name":null,"original":{"line":284,"column":4},"generated":{"line":1,"column":1522}},{"source":"builder.ts","name":null,"original":{"line":284,"column":32},"generated":{"line":1,"column":1541}},{"source":"builder.ts","name":null,"original":{"line":284,"column":39},"generated":{"line":1,"column":1548}},{"source":"builder.ts","name":null,"original":{"line":284,"column":44},"generated":{"line":1,"column":1553}},{"source":"builder.ts","name":null,"original":{"line":284,"column":55},"generated":{"line":1,"column":1562}},{"source":"builder.ts","name":null,"original":{"line":284,"column":60},"generated":{"line":1,"column":1567}},{"source":"builder.ts","name":null,"original":{"line":284,"column":69},"generated":{"line":1,"column":1576}},{"source":"builder.ts","name":null,"original":{"line":284,"column":78},"generated":{"line":1,"column":1583}},{"source":"builder.ts","name":null,"original":{"line":288,"column":4},"generated":{"line":1,"column":1588}},{"source":"builder.ts","name":null,"original":{"line":288,"column":26},"generated":{"line":1,"column":1601}},{"source":"builder.ts","name":null,"original":{"line":288,"column":33},"generated":{"line":1,"column":1608}},{"source":"builder.ts","name":null,"original":{"line":288,"column":38},"generated":{"line":1,"column":1613}},{"source":"builder.ts","name":null,"original":{"line":288,"column":48},"generated":{"line":1,"column":1621}},{"source":"builder.ts","name":null,"original":{"line":288,"column":53},"generated":{"line":1,"column":1626}},{"source":"builder.ts","name":null,"original":{"line":288,"column":61},"generated":{"line":1,"column":1634}},{"source":"builder.ts","name":null,"original":{"line":288,"column":70},"generated":{"line":1,"column":1641}},{"source":"builder.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":1,"column":1646}},{"source":"builder.ts","name":null,"original":{"line":291,"column":30},"generated":{"line":1,"column":1663}},{"source":"builder.ts","name":null,"original":{"line":291,"column":37},"generated":{"line":1,"column":1670}},{"source":"builder.ts","name":null,"original":{"line":291,"column":42},"generated":{"line":1,"column":1675}},{"source":"builder.ts","name":null,"original":{"line":291,"column":51},"generated":{"line":1,"column":1682}},{"source":"builder.ts","name":null,"original":{"line":291,"column":56},"generated":{"line":1,"column":1687}},{"source":"builder.ts","name":null,"original":{"line":291,"column":63},"generated":{"line":1,"column":1694}},{"source":"builder.ts","name":null,"original":{"line":291,"column":72},"generated":{"line":1,"column":1701}},{"source":"builder.ts","name":null,"original":{"line":295,"column":4},"generated":{"line":1,"column":1706}},{"source":"builder.ts","name":null,"original":{"line":295,"column":27},"generated":{"line":1,"column":1720}},{"source":"builder.ts","name":null,"original":{"line":295,"column":34},"generated":{"line":1,"column":1727}},{"source":"builder.ts","name":null,"original":{"line":295,"column":39},"generated":{"line":1,"column":1732}},{"source":"builder.ts","name":null,"original":{"line":295,"column":50},"generated":{"line":1,"column":1741}},{"source":"builder.ts","name":null,"original":{"line":295,"column":55},"generated":{"line":1,"column":1746}},{"source":"builder.ts","name":null,"original":{"line":295,"column":64},"generated":{"line":1,"column":1755}},{"source":"builder.ts","name":null,"original":{"line":295,"column":73},"generated":{"line":1,"column":1762}},{"source":"builder.ts","name":null,"original":{"line":307,"column":11},"generated":{"line":1,"column":1767}},{"source":"builder.ts","name":null,"original":{"line":307,"column":18},"generated":{"line":1,"column":1774}},{"source":"builder.ts","name":null,"original":{"line":307,"column":48},"generated":{"line":1,"column":1777}},{"source":"builder.ts","name":null,"original":{"line":307,"column":55},"generated":{"line":1,"column":1784}},{"source":"builder.ts","name":null,"original":{"line":307,"column":60},"generated":{"line":1,"column":1789}},{"source":"builder.ts","name":null,"original":{"line":307,"column":64},"generated":{"line":1,"column":1793}},{"source":"builder.ts","name":null,"original":{"line":307,"column":69},"generated":{"line":1,"column":1798}},{"source":"builder.ts","name":null,"original":{"line":307,"column":77},"generated":{"line":1,"column":1805}},{"source":"builder.ts","name":null,"original":{"line":314,"column":11},"generated":{"line":1,"column":1808}},{"source":"builder.ts","name":null,"original":{"line":314,"column":19},"generated":{"line":1,"column":1816}},{"source":"builder.ts","name":null,"original":{"line":314,"column":58},"generated":{"line":1,"column":1819}},{"source":"builder.ts","name":null,"original":{"line":314,"column":65},"generated":{"line":1,"column":1826}},{"source":"builder.ts","name":null,"original":{"line":314,"column":70},"generated":{"line":1,"column":1831}},{"source":"builder.ts","name":null,"original":{"line":314,"column":79},"generated":{"line":1,"column":1840}},{"source":"builder.ts","name":null,"original":{"line":326,"column":11},"generated":{"line":1,"column":1843}},{"source":"builder.ts","name":null,"original":{"line":326,"column":15},"generated":{"line":1,"column":1847}},{"source":"builder.ts","name":null,"original":{"line":326,"column":30},"generated":{"line":1,"column":1849}},{"source":"builder.ts","name":null,"original":{"line":330,"column":8},"generated":{"line":1,"column":1852}},{"source":"builder.ts","name":null,"original":{"line":327,"column":12},"generated":{"line":1,"column":1859}},{"source":"builder.ts","name":null,"original":{"line":327,"column":17},"generated":{"line":1,"column":1864}},{"source":"builder.ts","name":null,"original":{"line":327,"column":26},"generated":{"line":1,"column":1873}},{"source":"builder.ts","name":null,"original":{"line":327,"column":33},"generated":{"line":1,"column":1875}},{"source":"builder.ts","name":null,"original":{"line":327,"column":38},"generated":{"line":1,"column":1880}},{"source":"builder.ts","name":null,"original":{"line":327,"column":46},"generated":{"line":1,"column":1888}},{"source":"builder.ts","name":null,"original":{"line":328,"column":12},"generated":{"line":1,"column":1893}},{"source":"builder.ts","name":null,"original":{"line":328,"column":17},"generated":{"line":1,"column":1898}},{"source":"builder.ts","name":null,"original":{"line":328,"column":26},"generated":{"line":1,"column":1907}},{"source":"builder.ts","name":null,"original":{"line":328,"column":33},"generated":{"line":1,"column":1909}},{"source":"builder.ts","name":null,"original":{"line":330,"column":15},"generated":{"line":1,"column":1912}},{"source":"builder.ts","name":null,"original":{"line":340,"column":11},"generated":{"line":1,"column":1917}},{"source":"builder.ts","name":null,"original":{"line":340,"column":20},"generated":{"line":1,"column":1926}},{"source":"builder.ts","name":null,"original":{"line":340,"column":35},"generated":{"line":1,"column":1928}},{"source":"builder.ts","name":null,"original":{"line":340,"column":57},"generated":{"line":1,"column":1931}},{"source":"builder.ts","name":null,"original":{"line":340,"column":62},"generated":{"line":1,"column":1936}},{"source":"builder.ts","name":null,"original":{"line":340,"column":72},"generated":{"line":1,"column":1946}},{"source":"builder.ts","name":null,"original":{"line":340,"column":78},"generated":{"line":1,"column":1951}},{"source":"builder.ts","name":null,"original":{"line":340,"column":85},"generated":{"line":1,"column":1953}},{"source":"builder.ts","name":null,"original":{"line":341,"column":11},"generated":{"line":1,"column":1956}},{"source":"builder.ts","name":null,"original":{"line":341,"column":20},"generated":{"line":1,"column":1965}},{"source":"builder.ts","name":null,"original":{"line":341,"column":35},"generated":{"line":1,"column":1967}},{"source":"builder.ts","name":null,"original":{"line":343,"column":8},"generated":{"line":1,"column":1970}},{"source":"builder.ts","name":null,"original":{"line":342,"column":8},"generated":{"line":1,"column":1977}},{"source":"builder.ts","name":null,"original":{"line":342,"column":13},"generated":{"line":1,"column":1982}},{"source":"builder.ts","name":null,"original":{"line":342,"column":22},"generated":{"line":1,"column":1989}},{"source":"builder.ts","name":null,"original":{"line":342,"column":27},"generated":{"line":1,"column":1994}},{"source":"builder.ts","name":null,"original":{"line":342,"column":34},"generated":{"line":1,"column":2001}},{"source":"builder.ts","name":null,"original":{"line":342,"column":38},"generated":{"line":1,"column":2005}},{"source":"builder.ts","name":null,"original":{"line":342,"column":46},"generated":{"line":1,"column":2008}},{"source":"builder.ts","name":null,"original":{"line":342,"column":53},"generated":{"line":1,"column":2011}},{"source":"builder.ts","name":null,"original":{"line":343,"column":15},"generated":{"line":1,"column":2018}},{"source":"builder.ts","name":null,"original":{"line":347,"column":11},"generated":{"line":1,"column":2020}},{"source":"builder.ts","name":null,"original":{"line":347,"column":20},"generated":{"line":1,"column":2029}},{"source":"builder.ts","name":null,"original":{"line":347,"column":36},"generated":{"line":1,"column":2031}},{"source":"builder.ts","name":null,"original":{"line":347,"column":46},"generated":{"line":1,"column":2036}},{"source":"builder.ts","name":null,"original":{"line":347,"column":51},"generated":{"line":1,"column":2041}},{"source":"builder.ts","name":null,"original":{"line":348,"column":8},"generated":{"line":1,"column":2056}},{"source":"builder.ts","name":null,"original":{"line":348,"column":14},"generated":{"line":1,"column":2062}},{"source":"builder.ts","name":null,"original":{"line":348,"column":18},"generated":{"line":1,"column":2066}},{"source":"builder.ts","name":null,"original":{"line":348,"column":70},"generated":{"line":1,"column":2118}},{"source":"builder.ts","name":null,"original":{"line":348,"column":75},"generated":{"line":1,"column":2123}},{"source":"builder.ts","name":null,"original":{"line":357,"column":11},"generated":{"line":1,"column":2132}},{"source":"builder.ts","name":null,"original":{"line":357,"column":48},"generated":{"line":1,"column":2143}},{"source":"builder.ts","name":null,"original":{"line":358,"column":8},"generated":{"line":1,"column":2146}},{"source":"builder.ts","name":null,"original":{"line":358,"column":15},"generated":{"line":1,"column":2153}},{"source":"builder.ts","name":null,"original":{"line":358,"column":20},"generated":{"line":1,"column":2158}},{"source":"builder.ts","name":null,"original":{"line":358,"column":29},"generated":{"line":1,"column":2167}},{"source":"builder.ts","name":null,"original":{"line":358,"column":39},"generated":{"line":1,"column":2171}},{"source":"builder.ts","name":null,"original":{"line":367,"column":11},"generated":{"line":1,"column":2176}},{"source":"builder.ts","name":null,"original":{"line":369,"column":8},"generated":{"line":1,"column":2184}},{"source":"builder.ts","name":null,"original":{"line":369,"column":14},"generated":{"line":1,"column":2190}},{"source":"builder.ts","name":null,"original":{"line":369,"column":29},"generated":{"line":1,"column":2192}},{"source":"builder.ts","name":null,"original":{"line":370,"column":14},"generated":{"line":1,"column":2195}},{"source":"builder.ts","name":null,"original":{"line":370,"column":24},"generated":{"line":1,"column":2197}},{"source":"builder.ts","name":null,"original":{"line":370,"column":29},"generated":{"line":1,"column":2202}},{"source":"builder.ts","name":null,"original":{"line":371,"column":14},"generated":{"line":1,"column":2210}},{"source":"builder.ts","name":null,"original":{"line":371,"column":25},"generated":{"line":1,"column":2212}},{"source":"builder.ts","name":null,"original":{"line":371,"column":30},"generated":{"line":1,"column":2217}},{"source":"builder.ts","name":null,"original":{"line":372,"column":14},"generated":{"line":1,"column":2226}},{"source":"builder.ts","name":null,"original":{"line":372,"column":25},"generated":{"line":1,"column":2228}},{"source":"builder.ts","name":null,"original":{"line":372,"column":30},"generated":{"line":1,"column":2233}},{"source":"builder.ts","name":null,"original":{"line":373,"column":14},"generated":{"line":1,"column":2243}},{"source":"builder.ts","name":null,"original":{"line":373,"column":16},"generated":{"line":1,"column":2250}},{"source":"builder.ts","name":null,"original":{"line":373,"column":22},"generated":{"line":1,"column":2252}},{"source":"builder.ts","name":null,"original":{"line":373,"column":24},"generated":{"line":1,"column":2262}},{"source":"builder.ts","name":null,"original":{"line":373,"column":38},"generated":{"line":1,"column":2265}},{"source":"builder.ts","name":null,"original":{"line":375,"column":12},"generated":{"line":1,"column":2270}},{"source":"builder.ts","name":null,"original":{"line":376,"column":12},"generated":{"line":1,"column":2273}},{"source":"builder.ts","name":null,"original":{"line":376,"column":20},"generated":{"line":1,"column":2275}},{"source":"builder.ts","name":null,"original":{"line":376,"column":20},"generated":{"line":1,"column":2277}},{"source":"builder.ts","name":null,"original":{"line":376,"column":31},"generated":{"line":1,"column":2288}},{"source":"builder.ts","name":null,"original":{"line":376,"column":39},"generated":{"line":1,"column":2294}},{"source":"builder.ts","name":null,"original":{"line":376,"column":47},"generated":{"line":1,"column":2296}},{"source":"builder.ts","name":null,"original":{"line":376,"column":53},"generated":{"line":1,"column":2302}},{"source":"builder.ts","name":null,"original":{"line":378,"column":12},"generated":{"line":1,"column":2305}},{"source":"builder.ts","name":null,"original":{"line":378,"column":24},"generated":{"line":1,"column":2309}},{"source":"builder.ts","name":null,"original":{"line":378,"column":32},"generated":{"line":1,"column":2311}},{"source":"builder.ts","name":null,"original":{"line":378,"column":32},"generated":{"line":1,"column":2313}},{"source":"builder.ts","name":null,"original":{"line":378,"column":43},"generated":{"line":1,"column":2324}},{"source":"builder.ts","name":null,"original":{"line":378,"column":53},"generated":{"line":1,"column":2332}},{"source":"builder.ts","name":null,"original":{"line":378,"column":61},"generated":{"line":1,"column":2334}},{"source":"builder.ts","name":null,"original":{"line":378,"column":67},"generated":{"line":1,"column":2340}},{"source":"builder.ts","name":null,"original":{"line":379,"column":19},"generated":{"line":1,"column":2345}},{"source":"builder.ts","name":null,"original":{"line":381,"column":12},"generated":{"line":1,"column":2348}},{"source":"builder.ts","name":null,"original":{"line":381,"column":23},"generated":{"line":1,"column":2352}},{"source":"builder.ts","name":null,"original":{"line":381,"column":31},"generated":{"line":1,"column":2354}},{"source":"builder.ts","name":null,"original":{"line":381,"column":31},"generated":{"line":1,"column":2356}},{"source":"builder.ts","name":null,"original":{"line":381,"column":42},"generated":{"line":1,"column":2367}},{"source":"builder.ts","name":null,"original":{"line":381,"column":50},"generated":{"line":1,"column":2373}},{"source":"builder.ts","name":null,"original":{"line":381,"column":57},"generated":{"line":1,"column":2375}},{"source":"builder.ts","name":null,"original":{"line":381,"column":63},"generated":{"line":1,"column":2381}},{"source":"builder.ts","name":null,"original":{"line":381,"column":71},"generated":{"line":1,"column":2383}},{"source":"builder.ts","name":null,"original":{"line":382,"column":12},"generated":{"line":1,"column":2392}},{"source":"builder.ts","name":null,"original":{"line":382,"column":20},"generated":{"line":1,"column":2394}},{"source":"builder.ts","name":null,"original":{"line":382,"column":20},"generated":{"line":1,"column":2396}},{"source":"builder.ts","name":null,"original":{"line":382,"column":31},"generated":{"line":1,"column":2407}},{"source":"builder.ts","name":null,"original":{"line":382,"column":41},"generated":{"line":1,"column":2415}},{"source":"builder.ts","name":null,"original":{"line":382,"column":49},"generated":{"line":1,"column":2417}},{"source":"builder.ts","name":null,"original":{"line":382,"column":55},"generated":{"line":1,"column":2423}},{"source":"builder.ts","name":null,"original":{"line":383,"column":19},"generated":{"line":1,"column":2427}},{"source":"builder.ts","name":null,"original":{"line":384,"column":12},"generated":{"line":1,"column":2431}},{"source":"builder.ts","name":null,"original":{"line":384,"column":20},"generated":{"line":1,"column":2433}},{"source":"builder.ts","name":null,"original":{"line":384,"column":20},"generated":{"line":1,"column":2435}},{"source":"builder.ts","name":null,"original":{"line":384,"column":31},"generated":{"line":1,"column":2446}},{"source":"builder.ts","name":null,"original":{"line":384,"column":39},"generated":{"line":1,"column":2452}},{"source":"builder.ts","name":null,"original":{"line":384,"column":46},"generated":{"line":1,"column":2454}},{"source":"builder.ts","name":null,"original":{"line":384,"column":52},"generated":{"line":1,"column":2460}},{"source":"builder.ts","name":null,"original":{"line":387,"column":8},"generated":{"line":1,"column":2464}},{"source":"builder.ts","name":null,"original":{"line":387,"column":20},"generated":{"line":1,"column":2466}},{"source":"builder.ts","name":null,"original":{"line":387,"column":26},"generated":{"line":1,"column":2470}},{"source":"builder.ts","name":null,"original":{"line":387,"column":34},"generated":{"line":1,"column":2472}},{"source":"builder.ts","name":null,"original":{"line":387,"column":34},"generated":{"line":1,"column":2474}},{"source":"builder.ts","name":null,"original":{"line":387,"column":45},"generated":{"line":1,"column":2485}},{"source":"builder.ts","name":null,"original":{"line":387,"column":57},"generated":{"line":1,"column":2495}},{"source":"builder.ts","name":null,"original":{"line":387,"column":62},"generated":{"line":1,"column":2500}},{"source":"builder.ts","name":null,"original":{"line":387,"column":69},"generated":{"line":1,"column":2507}},{"source":"builder.ts","name":null,"original":{"line":387,"column":75},"generated":{"line":1,"column":2513}},{"source":"builder.ts","name":null,"original":{"line":389,"column":8},"generated":{"line":1,"column":2517}},{"source":"builder.ts","name":null,"original":{"line":389,"column":14},"generated":{"line":1,"column":2523}},{"source":"builder.ts","name":null,"original":{"line":389,"column":21},"generated":{"line":1,"column":2525}},{"source":"builder.ts","name":null,"original":{"line":389,"column":21},"generated":{"line":1,"column":2527}},{"source":"builder.ts","name":null,"original":{"line":389,"column":26},"generated":{"line":1,"column":2532}},{"source":"builder.ts","name":null,"original":{"line":390,"column":12},"generated":{"line":1,"column":2536}},{"source":"builder.ts","name":null,"original":{"line":390,"column":17},"generated":{"line":1,"column":2541}},{"source":"builder.ts","name":null,"original":{"line":390,"column":23},"generated":{"line":1,"column":2546}},{"source":"builder.ts","name":null,"original":{"line":390,"column":26},"generated":{"line":1,"column":2548}},{"source":"builder.ts","name":null,"original":{"line":390,"column":34},"generated":{"line":1,"column":2550}},{"source":"builder.ts","name":null,"original":{"line":390,"column":45},"generated":{"line":1,"column":2552}},{"source":"builder.ts","name":null,"original":{"line":391,"column":12},"generated":{"line":1,"column":2554}},{"source":"builder.ts","name":null,"original":{"line":391,"column":17},"generated":{"line":1,"column":2559}},{"source":"builder.ts","name":null,"original":{"line":391,"column":26},"generated":{"line":1,"column":2568}},{"source":"builder.ts","name":null,"original":{"line":391,"column":31},"generated":{"line":1,"column":2572}},{"source":"builder.ts","name":null,"original":{"line":391,"column":41},"generated":{"line":1,"column":2575}},{"source":"builder.ts","name":null,"original":{"line":391,"column":47},"generated":{"line":1,"column":2577}},{"source":"builder.ts","name":null,"original":{"line":395,"column":8},"generated":{"line":1,"column":2587}},{"source":"builder.ts","name":null,"original":{"line":393,"column":8},"generated":{"line":1,"column":2594}},{"source":"builder.ts","name":null,"original":{"line":393,"column":13},"generated":{"line":1,"column":2599}},{"source":"builder.ts","name":null,"original":{"line":395,"column":15},"generated":{"line":1,"column":2607}},{"source":"builder.ts","name":null,"original":{"line":402,"column":11},"generated":{"line":1,"column":2609}},{"source":"builder.ts","name":null,"original":{"line":405,"column":8},"generated":{"line":1,"column":2618}},{"source":"builder.ts","name":null,"original":{"line":403,"column":8},"generated":{"line":1,"column":2625}},{"source":"builder.ts","name":null,"original":{"line":403,"column":13},"generated":{"line":1,"column":2630}},{"source":"builder.ts","name":null,"original":{"line":403,"column":24},"generated":{"line":1,"column":2640}},{"source":"builder.ts","name":null,"original":{"line":404,"column":8},"generated":{"line":1,"column":2642}},{"source":"builder.ts","name":null,"original":{"line":404,"column":13},"generated":{"line":1,"column":2647}},{"source":"builder.ts","name":null,"original":{"line":404,"column":22},"generated":{"line":1,"column":2656}},{"source":"builder.ts","name":null,"original":{"line":404,"column":31},"generated":{"line":1,"column":2664}},{"source":"builder.ts","name":null,"original":{"line":404,"column":41},"generated":{"line":1,"column":2667}},{"source":"builder.ts","name":null,"original":{"line":404,"column":47},"generated":{"line":1,"column":2669}},{"source":"builder.ts","name":null,"original":{"line":405,"column":15},"generated":{"line":1,"column":2679}},{"source":"builder.ts","name":null,"original":{"line":412,"column":11},"generated":{"line":1,"column":2684}},{"source":"builder.ts","name":null,"original":{"line":419,"column":8},"generated":{"line":1,"column":2692}},{"source":"builder.ts","name":null,"original":{"line":413,"column":8},"generated":{"line":1,"column":2699}},{"source":"builder.ts","name":null,"original":{"line":413,"column":13},"generated":{"line":1,"column":2704}},{"source":"builder.ts","name":null,"original":{"line":413,"column":22},"generated":{"line":1,"column":2711}},{"source":"builder.ts","name":null,"original":{"line":414,"column":8},"generated":{"line":1,"column":2713}},{"source":"builder.ts","name":null,"original":{"line":414,"column":13},"generated":{"line":1,"column":2718}},{"source":"builder.ts","name":null,"original":{"line":414,"column":26},"generated":{"line":1,"column":2728}},{"source":"builder.ts","name":null,"original":{"line":414,"column":31},"generated":{"line":1,"column":2733}},{"source":"builder.ts","name":null,"original":{"line":414,"column":40},"generated":{"line":1,"column":2742}},{"source":"builder.ts","name":null,"original":{"line":415,"column":8},"generated":{"line":1,"column":2750}},{"source":"builder.ts","name":null,"original":{"line":415,"column":13},"generated":{"line":1,"column":2755}},{"source":"builder.ts","name":null,"original":{"line":415,"column":25},"generated":{"line":1,"column":2764}},{"source":"builder.ts","name":null,"original":{"line":415,"column":30},"generated":{"line":1,"column":2769}},{"source":"builder.ts","name":null,"original":{"line":415,"column":38},"generated":{"line":1,"column":2777}},{"source":"builder.ts","name":null,"original":{"line":416,"column":8},"generated":{"line":1,"column":2785}},{"source":"builder.ts","name":null,"original":{"line":416,"column":13},"generated":{"line":1,"column":2790}},{"source":"builder.ts","name":null,"original":{"line":416,"column":24},"generated":{"line":1,"column":2798}},{"source":"builder.ts","name":null,"original":{"line":416,"column":29},"generated":{"line":1,"column":2803}},{"source":"builder.ts","name":null,"original":{"line":416,"column":36},"generated":{"line":1,"column":2810}},{"source":"builder.ts","name":null,"original":{"line":417,"column":8},"generated":{"line":1,"column":2818}},{"source":"builder.ts","name":null,"original":{"line":417,"column":13},"generated":{"line":1,"column":2823}},{"source":"builder.ts","name":null,"original":{"line":417,"column":26},"generated":{"line":1,"column":2833}},{"source":"builder.ts","name":null,"original":{"line":417,"column":31},"generated":{"line":1,"column":2838}},{"source":"builder.ts","name":null,"original":{"line":417,"column":40},"generated":{"line":1,"column":2847}},{"source":"builder.ts","name":null,"original":{"line":418,"column":8},"generated":{"line":1,"column":2855}},{"source":"builder.ts","name":null,"original":{"line":418,"column":13},"generated":{"line":1,"column":2860}},{"source":"builder.ts","name":null,"original":{"line":418,"column":22},"generated":{"line":1,"column":2869}},{"source":"builder.ts","name":null,"original":{"line":418,"column":31},"generated":{"line":1,"column":2877}},{"source":"builder.ts","name":null,"original":{"line":418,"column":41},"generated":{"line":1,"column":2880}},{"source":"builder.ts","name":null,"original":{"line":418,"column":47},"generated":{"line":1,"column":2882}},{"source":"builder.ts","name":null,"original":{"line":419,"column":15},"generated":{"line":1,"column":2891}},{"source":"builder.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":1,"column":2897}},{"source":"builder.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":1,"column":2905}},{"source":"builder.ts","name":null,"original":{"line":110,"column":0},"generated":{"line":1,"column":2913}},{"source":"builder.ts","name":null,"original":{"line":423,"column":1},"generated":{"line":1,"column":2915}},{"source":"builder.ts","name":null,"original":{"line":423,"column":9},"generated":{"line":1,"column":2917}},{"source":"builder.ts","name":null,"original":{"line":423,"column":27},"generated":{"line":1,"column":2927}},{"source":"builder.ts","name":null,"original":{"line":423,"column":36},"generated":{"line":1,"column":2934}},{"source":"builder.ts","name":null,"original":{"line":424,"column":1},"generated":{"line":1,"column":2936}},{"source":"builder.ts","name":null,"original":{"line":424,"column":9},"generated":{"line":1,"column":2938}},{"source":"builder.ts","name":null,"original":{"line":424,"column":27},"generated":{"line":1,"column":2948}},{"source":"builder.ts","name":null,"original":{"line":424,"column":36},"generated":{"line":1,"column":2955}},{"source":"builder.ts","name":null,"original":{"line":425,"column":1},"generated":{"line":1,"column":2957}},{"source":"builder.ts","name":null,"original":{"line":425,"column":9},"generated":{"line":1,"column":2959}},{"source":"builder.ts","name":null,"original":{"line":425,"column":27},"generated":{"line":1,"column":2969}},{"source":"builder.ts","name":null,"original":{"line":425,"column":38},"generated":{"line":1,"column":2978}},{"source":"builder.ts","name":null,"original":{"line":426,"column":1},"generated":{"line":1,"column":2983}},{"source":"builder.ts","name":null,"original":{"line":426,"column":9},"generated":{"line":1,"column":2985}},{"source":"builder.ts","name":null,"original":{"line":426,"column":27},"generated":{"line":1,"column":2995}},{"source":"builder.ts","name":null,"original":{"line":426,"column":38},"generated":{"line":1,"column":3005}},{"source":"builder.ts","name":null,"original":{"line":427,"column":1},"generated":{"line":1,"column":3007}},{"source":"builder.ts","name":null,"original":{"line":427,"column":9},"generated":{"line":1,"column":3009}},{"source":"builder.ts","name":null,"original":{"line":427,"column":27},"generated":{"line":1,"column":3019}},{"source":"builder.ts","name":null,"original":{"line":427,"column":40},"generated":{"line":1,"column":3030}},{"source":"builder.ts","name":null,"original":{"line":428,"column":1},"generated":{"line":1,"column":3035}},{"source":"builder.ts","name":null,"original":{"line":428,"column":9},"generated":{"line":1,"column":3037}},{"source":"builder.ts","name":null,"original":{"line":428,"column":27},"generated":{"line":1,"column":3047}},{"source":"builder.ts","name":null,"original":{"line":428,"column":38},"generated":{"line":1,"column":3056}},{"source":"builder.ts","name":null,"original":{"line":428,"column":44},"generated":{"line":1,"column":3062}},{"source":"builder.ts","name":null,"original":{"line":431,"column":0},"generated":{"line":1,"column":3065}},{"source":"builder.ts","name":null,"original":{"line":431,"column":22},"generated":{"line":1,"column":3071}},{"source":"builder.ts","name":null,"original":{"line":431,"column":156},"generated":{"line":1,"column":3081}},{"source":"builder.ts","name":null,"original":{"line":432,"column":4},"generated":{"line":1,"column":3083}},{"source":"builder.ts","name":null,"original":{"line":432,"column":16},"generated":{"line":1,"column":3095}},{"source":"builder.ts","name":null,"original":{"line":433,"column":8},"generated":{"line":1,"column":3098}},{"source":"builder.ts","name":null,"original":{"line":433,"column":14},"generated":{"line":1,"column":3104}},{"source":"builder.ts","name":null,"original":{"line":434,"column":8},"generated":{"line":1,"column":3107}},{"source":"builder.ts","name":null,"original":{"line":434,"column":13},"generated":{"line":1,"column":3112}},{"source":"builder.ts","name":null,"original":{"line":434,"column":23},"generated":{"line":1,"column":3120}},{"source":"builder.ts","name":null,"original":{"line":434,"column":27},"generated":{"line":1,"column":3124}},{"source":"builder.ts","name":null,"original":{"line":434,"column":27},"generated":{"line":1,"column":3126}},{"source":"builder.ts","name":null,"original":{"line":434,"column":45},"generated":{"line":1,"column":3144}},{"source":"builder.ts","name":null,"original":{"line":434,"column":49},"generated":{"line":1,"column":3148}},{"source":"builder.ts","name":null,"original":{"line":434,"column":54},"generated":{"line":1,"column":3153}},{"source":"builder.ts","name":null,"original":{"line":434,"column":64},"generated":{"line":1,"column":3163}},{"source":"builder.ts","name":null,"original":{"line":434,"column":68},"generated":{"line":1,"column":3166}},{"source":"builder.ts","name":null,"original":{"line":434,"column":73},"generated":{"line":1,"column":3171}},{"source":"builder.ts","name":null,"original":{"line":436,"column":11},"generated":{"line":1,"column":3179}},{"source":"builder.ts","name":null,"original":{"line":436,"column":20},"generated":{"line":1,"column":3188}},{"source":"builder.ts","name":null,"original":{"line":436,"column":35},"generated":{"line":1,"column":3190}},{"source":"builder.ts","name":null,"original":{"line":437,"column":8},"generated":{"line":1,"column":3193}},{"source":"builder.ts","name":null,"original":{"line":437,"column":14},"generated":{"line":1,"column":3199}},{"source":"builder.ts","name":null,"original":{"line":437,"column":23},"generated":{"line":1,"column":3201}},{"source":"builder.ts","name":null,"original":{"line":437,"column":28},"generated":{"line":1,"column":3206}},{"source":"builder.ts","name":null,"original":{"line":439,"column":8},"generated":{"line":1,"column":3214}},{"source":"builder.ts","name":null,"original":{"line":438,"column":8},"generated":{"line":1,"column":3221}},{"source":"builder.ts","name":null,"original":{"line":438,"column":15},"generated":{"line":1,"column":3223}},{"source":"builder.ts","name":null,"original":{"line":438,"column":23},"generated":{"line":1,"column":3231}},{"source":"builder.ts","name":null,"original":{"line":438,"column":31},"generated":{"line":1,"column":3233}},{"source":"builder.ts","name":null,"original":{"line":438,"column":38},"generated":{"line":1,"column":3235}},{"source":"builder.ts","name":null,"original":{"line":438,"column":47},"generated":{"line":1,"column":3242}},{"source":"builder.ts","name":null,"original":{"line":439,"column":15},"generated":{"line":1,"column":3245}},{"source":"builder.ts","name":null,"original":{"line":439,"column":21},"generated":{"line":1,"column":3251}},{"source":"builder.ts","name":null,"original":{"line":439,"column":30},"generated":{"line":1,"column":3260}},{"source":"builder.ts","name":null,"original":{"line":439,"column":37},"generated":{"line":1,"column":3262}},{"source":"builder.ts","name":null,"original":{"line":431,"column":0},"generated":{"line":1,"column":3266}},{"source":"builder.ts","name":null,"original":{"line":431,"column":0},"generated":{"line":1,"column":3274}},{"source":"builder.ts","name":null,"original":{"line":431,"column":0},"generated":{"line":1,"column":3292}},{"source":"builder.ts","name":null,"original":{"line":444,"column":0},"generated":{"line":1,"column":3294}},{"source":"builder.ts","name":null,"original":{"line":444,"column":22},"generated":{"line":1,"column":3300}},{"source":"builder.ts","name":null,"original":{"line":444,"column":103},"generated":{"line":1,"column":3310}},{"source":"builder.ts","name":null,"original":{"line":448,"column":4},"generated":{"line":1,"column":3312}},{"source":"builder.ts","name":null,"original":{"line":448,"column":16},"generated":{"line":1,"column":3324}},{"source":"builder.ts","name":null,"original":{"line":449,"column":8},"generated":{"line":1,"column":3327}},{"source":"builder.ts","name":null,"original":{"line":449,"column":14},"generated":{"line":1,"column":3333}},{"source":"builder.ts","name":null,"original":{"line":445,"column":14},"generated":{"line":1,"column":3336}},{"source":"builder.ts","name":null,"original":{"line":445,"column":14},"generated":{"line":1,"column":3341}},{"source":"builder.ts","name":null,"original":{"line":445,"column":39},"generated":{"line":1,"column":3356}},{"source":"builder.ts","name":null,"original":{"line":450,"column":8},"generated":{"line":1,"column":3358}},{"source":"builder.ts","name":null,"original":{"line":450,"column":13},"generated":{"line":1,"column":3363}},{"source":"builder.ts","name":null,"original":{"line":450,"column":24},"generated":{"line":1,"column":3372}},{"source":"builder.ts","name":null,"original":{"line":450,"column":28},"generated":{"line":1,"column":3376}},{"source":"builder.ts","name":null,"original":{"line":450,"column":28},"generated":{"line":1,"column":3378}},{"source":"builder.ts","name":null,"original":{"line":452,"column":11},"generated":{"line":1,"column":3399}},{"source":"builder.ts","name":null,"original":{"line":452,"column":20},"generated":{"line":1,"column":3408}},{"source":"builder.ts","name":null,"original":{"line":452,"column":35},"generated":{"line":1,"column":3410}},{"source":"builder.ts","name":null,"original":{"line":453,"column":8},"generated":{"line":1,"column":3413}},{"source":"builder.ts","name":null,"original":{"line":453,"column":14},"generated":{"line":1,"column":3419}},{"source":"builder.ts","name":null,"original":{"line":453,"column":24},"generated":{"line":1,"column":3421}},{"source":"builder.ts","name":null,"original":{"line":453,"column":29},"generated":{"line":1,"column":3426}},{"source":"builder.ts","name":null,"original":{"line":453,"column":42},"generated":{"line":1,"column":3437}},{"source":"builder.ts","name":null,"original":{"line":453,"column":47},"generated":{"line":1,"column":3442}},{"source":"builder.ts","name":null,"original":{"line":453,"column":58},"generated":{"line":1,"column":3451}},{"source":"builder.ts","name":null,"original":{"line":453,"column":62},"generated":{"line":1,"column":3455}},{"source":"builder.ts","name":null,"original":{"line":454,"column":14},"generated":{"line":1,"column":3460}},{"source":"builder.ts","name":null,"original":{"line":454,"column":24},"generated":{"line":1,"column":3462}},{"source":"builder.ts","name":null,"original":{"line":454,"column":32},"generated":{"line":1,"column":3464}},{"source":"builder.ts","name":null,"original":{"line":454,"column":36},"generated":{"line":1,"column":3468}},{"source":"builder.ts","name":null,"original":{"line":455,"column":8},"generated":{"line":1,"column":3471}},{"source":"builder.ts","name":null,"original":{"line":455,"column":20},"generated":{"line":1,"column":3475}},{"source":"builder.ts","name":null,"original":{"line":455,"column":25},"generated":{"line":1,"column":3480}},{"source":"builder.ts","name":null,"original":{"line":455,"column":43},"generated":{"line":1,"column":3496}},{"source":"builder.ts","name":null,"original":{"line":455,"column":51},"generated":{"line":1,"column":3498}},{"source":"builder.ts","name":null,"original":{"line":456,"column":8},"generated":{"line":1,"column":3506}},{"source":"builder.ts","name":null,"original":{"line":456,"column":13},"generated":{"line":1,"column":3511}},{"source":"builder.ts","name":null,"original":{"line":456,"column":31},"generated":{"line":1,"column":3527}},{"source":"builder.ts","name":null,"original":{"line":456,"column":37},"generated":{"line":1,"column":3529}},{"source":"builder.ts","name":null,"original":{"line":457,"column":8},"generated":{"line":1,"column":3536}},{"source":"builder.ts","name":null,"original":{"line":457,"column":16},"generated":{"line":1,"column":3538}},{"source":"builder.ts","name":null,"original":{"line":457,"column":20},"generated":{"line":1,"column":3542}},{"source":"builder.ts","name":null,"original":{"line":457,"column":27},"generated":{"line":1,"column":3544}},{"source":"builder.ts","name":null,"original":{"line":459,"column":11},"generated":{"line":1,"column":3547}},{"source":"builder.ts","name":null,"original":{"line":459,"column":20},"generated":{"line":1,"column":3556}},{"source":"builder.ts","name":null,"original":{"line":459,"column":35},"generated":{"line":1,"column":3558}},{"source":"builder.ts","name":null,"original":{"line":460,"column":8},"generated":{"line":1,"column":3561}},{"source":"builder.ts","name":null,"original":{"line":460,"column":13},"generated":{"line":1,"column":3569}},{"source":"builder.ts","name":null,"original":{"line":460,"column":19},"generated":{"line":1,"column":3575}},{"source":"builder.ts","name":null,"original":{"line":460,"column":28},"generated":{"line":1,"column":3584}},{"source":"builder.ts","name":null,"original":{"line":460,"column":35},"generated":{"line":1,"column":3586}},{"source":"builder.ts","name":null,"original":{"line":461,"column":13},"generated":{"line":1,"column":3592}},{"source":"builder.ts","name":null,"original":{"line":461,"column":18},"generated":{"line":1,"column":3597}},{"source":"builder.ts","name":null,"original":{"line":461,"column":31},"generated":{"line":1,"column":3608}},{"source":"builder.ts","name":null,"original":{"line":461,"column":36},"generated":{"line":1,"column":3613}},{"source":"builder.ts","name":null,"original":{"line":461,"column":47},"generated":{"line":1,"column":3622}},{"source":"builder.ts","name":null,"original":{"line":461,"column":51},"generated":{"line":1,"column":3626}},{"source":"builder.ts","name":null,"original":{"line":461,"column":59},"generated":{"line":1,"column":3632}},{"source":"builder.ts","name":null,"original":{"line":461,"column":63},"generated":{"line":1,"column":3636}},{"source":"builder.ts","name":null,"original":{"line":461,"column":70},"generated":{"line":1,"column":3643}},{"source":"builder.ts","name":null,"original":{"line":462,"column":19},"generated":{"line":1,"column":3647}},{"source":"builder.ts","name":null,"original":{"line":466,"column":11},"generated":{"line":1,"column":3650}},{"source":"builder.ts","name":null,"original":{"line":469,"column":8},"generated":{"line":1,"column":3658}},{"source":"builder.ts","name":null,"original":{"line":467,"column":8},"generated":{"line":1,"column":3665}},{"source":"builder.ts","name":null,"original":{"line":467,"column":13},"generated":{"line":1,"column":3670}},{"source":"builder.ts","name":null,"original":{"line":467,"column":30},"generated":{"line":1,"column":3685}},{"source":"builder.ts","name":null,"original":{"line":468,"column":8},"generated":{"line":1,"column":3687}},{"source":"builder.ts","name":null,"original":{"line":468,"column":13},"generated":{"line":1,"column":3692}},{"source":"builder.ts","name":null,"original":{"line":468,"column":24},"generated":{"line":1,"column":3706}},{"source":"builder.ts","name":null,"original":{"line":469,"column":15},"generated":{"line":1,"column":3708}},{"source":"builder.ts","name":null,"original":{"line":469,"column":21},"generated":{"line":1,"column":3714}},{"source":"builder.ts","name":null,"original":{"line":471,"column":11},"generated":{"line":1,"column":3722}},{"source":"builder.ts","name":null,"original":{"line":473,"column":8},"generated":{"line":1,"column":3730}},{"source":"builder.ts","name":null,"original":{"line":472,"column":8},"generated":{"line":1,"column":3737}},{"source":"builder.ts","name":null,"original":{"line":472,"column":13},"generated":{"line":1,"column":3742}},{"source":"builder.ts","name":null,"original":{"line":473,"column":15},"generated":{"line":1,"column":3751}},{"source":"builder.ts","name":null,"original":{"line":473,"column":21},"generated":{"line":1,"column":3757}},{"source":"builder.ts","name":null,"original":{"line":475,"column":11},"generated":{"line":1,"column":3765}},{"source":"builder.ts","name":null,"original":{"line":477,"column":8},"generated":{"line":1,"column":3774}},{"source":"builder.ts","name":null,"original":{"line":476,"column":8},"generated":{"line":1,"column":3781}},{"source":"builder.ts","name":null,"original":{"line":476,"column":13},"generated":{"line":1,"column":3786}},{"source":"builder.ts","name":null,"original":{"line":477,"column":15},"generated":{"line":1,"column":3795}},{"source":"builder.ts","name":null,"original":{"line":477,"column":21},"generated":{"line":1,"column":3801}},{"source":"builder.ts","name":null,"original":{"line":479,"column":14},"generated":{"line":1,"column":3810}},{"source":"builder.ts","name":null,"original":{"line":480,"column":8},"generated":{"line":1,"column":3819}},{"source":"builder.ts","name":null,"original":{"line":480,"column":14},"generated":{"line":1,"column":3825}},{"source":"builder.ts","name":null,"original":{"line":480,"column":24},"generated":{"line":1,"column":3827}},{"source":"builder.ts","name":null,"original":{"line":480,"column":29},"generated":{"line":1,"column":3832}},{"source":"builder.ts","name":null,"original":{"line":481,"column":14},"generated":{"line":1,"column":3841}},{"source":"builder.ts","name":null,"original":{"line":481,"column":30},"generated":{"line":1,"column":3843}},{"source":"builder.ts","name":null,"original":{"line":481,"column":35},"generated":{"line":1,"column":3848}},{"source":"builder.ts","name":null,"original":{"line":487,"column":8},"generated":{"line":1,"column":3863}},{"source":"builder.ts","name":null,"original":{"line":482,"column":8},"generated":{"line":1,"column":3870}},{"source":"builder.ts","name":null,"original":{"line":482,"column":13},"generated":{"line":1,"column":3875}},{"source":"builder.ts","name":null,"original":{"line":482,"column":30},"generated":{"line":1,"column":3890}},{"source":"builder.ts","name":null,"original":{"line":483,"column":8},"generated":{"line":1,"column":3892}},{"source":"builder.ts","name":null,"original":{"line":483,"column":13},"generated":{"line":1,"column":3897}},{"source":"builder.ts","name":null,"original":{"line":483,"column":24},"generated":{"line":1,"column":3911}},{"source":"builder.ts","name":null,"original":{"line":484,"column":12},"generated":{"line":1,"column":3913}},{"source":"builder.ts","name":null,"original":{"line":484,"column":23},"generated":{"line":1,"column":3916}},{"source":"builder.ts","name":null,"original":{"line":484,"column":31},"generated":{"line":1,"column":3918}},{"source":"builder.ts","name":null,"original":{"line":484,"column":38},"generated":{"line":1,"column":3923}},{"source":"builder.ts","name":null,"original":{"line":485,"column":12},"generated":{"line":1,"column":3926}},{"source":"builder.ts","name":null,"original":{"line":485,"column":17},"generated":{"line":1,"column":3931}},{"source":"builder.ts","name":null,"original":{"line":485,"column":31},"generated":{"line":1,"column":3945}},{"source":"builder.ts","name":null,"original":{"line":485,"column":40},"generated":{"line":1,"column":3947}},{"source":"builder.ts","name":null,"original":{"line":487,"column":15},"generated":{"line":1,"column":3950}},{"source":"builder.ts","name":null,"original":{"line":496,"column":0},"generated":{"line":1,"column":3956}},{"source":"builder.ts","name":null,"original":{"line":496,"column":9},"generated":{"line":1,"column":3965}},{"source":"builder.ts","name":null,"original":{"line":496,"column":64},"generated":{"line":1,"column":3967}},{"source":"builder.ts","name":null,"original":{"line":497,"column":4},"generated":{"line":1,"column":3970}},{"source":"builder.ts","name":null,"original":{"line":497,"column":12},"generated":{"line":1,"column":3976}},{"source":"builder.ts","name":null,"original":{"line":497,"column":34},"generated":{"line":1,"column":3993}},{"source":"builder.ts","name":null,"original":{"line":497,"column":53},"generated":{"line":1,"column":3995}},{"source":"builder.ts","name":null,"original":{"line":497,"column":65},"generated":{"line":1,"column":4004}},{"source":"builder.ts","name":null,"original":{"line":498,"column":12},"generated":{"line":1,"column":4007}},{"source":"builder.ts","name":null,"original":{"line":498,"column":31},"generated":{"line":1,"column":4021}},{"source":"builder.ts","name":null,"original":{"line":498,"column":68},"generated":{"line":1,"column":4024}},{"source":"builder.ts","name":null,"original":{"line":498,"column":47},"generated":{"line":1,"column":4034}},{"source":"builder.ts","name":null,"original":{"line":498,"column":78},"generated":{"line":1,"column":4036}},{"source":"builder.ts","name":null,"original":{"line":498,"column":85},"generated":{"line":1,"column":4040}},{"source":"builder.ts","name":null,"original":{"line":498,"column":97},"generated":{"line":1,"column":4048}},{"source":"builder.ts","name":null,"original":{"line":499,"column":10},"generated":{"line":1,"column":4050}},{"source":"builder.ts","name":null,"original":{"line":499,"column":71},"generated":{"line":1,"column":4052}},{"source":"builder.ts","name":null,"original":{"line":499,"column":50},"generated":{"line":1,"column":4062}},{"source":"builder.ts","name":null,"original":{"line":499,"column":81},"generated":{"line":1,"column":4064}},{"source":"builder.ts","name":null,"original":{"line":499,"column":92},"generated":{"line":1,"column":4073}},{"source":"builder.ts","name":null,"original":{"line":500,"column":4},"generated":{"line":1,"column":4086}},{"source":"builder.ts","name":null,"original":{"line":500,"column":11},"generated":{"line":1,"column":4093}},{"source":"builder.ts","name":null,"original":{"line":500,"column":21},"generated":{"line":1,"column":4103}},{"source":"builder.ts","name":null,"original":{"line":501,"column":8},"generated":{"line":1,"column":4106}},{"source":"builder.ts","name":null,"original":{"line":501,"column":12},"generated":{"line":1,"column":4110}},{"source":"builder.ts","name":null,"original":{"line":501,"column":24},"generated":{"line":1,"column":4112}},{"source":"builder.ts","name":null,"original":{"line":502,"column":12},"generated":{"line":1,"column":4114}},{"source":"builder.ts","name":null,"original":{"line":502,"column":22},"generated":{"line":1,"column":4116}},{"source":"builder.ts","name":null,"original":{"line":502,"column":30},"generated":{"line":1,"column":4118}},{"source":"builder.ts","name":null,"original":{"line":502,"column":34},"generated":{"line":1,"column":4122}},{"source":"builder.ts","name":null,"original":{"line":503,"column":8},"generated":{"line":1,"column":4125}},{"source":"builder.ts","name":null,"original":{"line":503,"column":13},"generated":{"line":1,"column":4129}},{"source":"builder.ts","name":null,"original":{"line":503,"column":19},"generated":{"line":1,"column":4135}},{"source":"builder.ts","name":null,"original":{"line":503,"column":28},"generated":{"line":1,"column":4140}},{"source":"builder.ts","name":null,"original":{"line":504,"column":16},"generated":{"line":1,"column":4142}},{"source":"builder.ts","name":null,"original":{"line":504,"column":24},"generated":{"line":1,"column":4144}},{"source":"builder.ts","name":null,"original":{"line":504,"column":31},"generated":{"line":1,"column":4151}},{"source":"builder.ts","name":null,"original":{"line":504,"column":38},"generated":{"line":1,"column":4154}},{"source":"builder.ts","name":null,"original":{"line":504,"column":55},"generated":{"line":1,"column":4158}},{"source":"builder.ts","name":null,"original":{"line":505,"column":18},"generated":{"line":1,"column":4163}},{"source":"builder.ts","name":null,"original":{"line":505,"column":38},"generated":{"line":1,"column":4173}},{"source":"builder.ts","name":null,"original":{"line":505,"column":46},"generated":{"line":1,"column":4175}},{"source":"builder.ts","name":null,"original":{"line":508,"column":12},"generated":{"line":1,"column":4188}},{"source":"builder.ts","name":null,"original":{"line":508,"column":20},"generated":{"line":1,"column":4190}},{"source":"builder.ts","name":null,"original":{"line":508,"column":29},"generated":{"line":1,"column":4199}},{"source":"builder.ts","name":null,"original":{"line":508,"column":38},"generated":{"line":1,"column":4206}},{"source":"builder.ts","name":null,"original":{"line":508,"column":57},"generated":{"line":1,"column":4209}},{"source":"builder.ts","name":null,"original":{"line":508,"column":43},"generated":{"line":1,"column":4213}},{"source":"builder.ts","name":null,"original":{"line":509,"column":18},"generated":{"line":1,"column":4224}},{"source":"builder.ts","name":null,"original":{"line":509,"column":26},"generated":{"line":1,"column":4226}},{"source":"builder.ts","name":null,"original":{"line":518,"column":0},"generated":{"line":1,"column":4239}},{"source":"builder.ts","name":null,"original":{"line":518,"column":9},"generated":{"line":1,"column":4248}},{"source":"builder.ts","name":null,"original":{"line":518,"column":69},"generated":{"line":1,"column":4250}},{"source":"builder.ts","name":null,"original":{"line":519,"column":4},"generated":{"line":1,"column":4253}},{"source":"builder.ts","name":null,"original":{"line":519,"column":12},"generated":{"line":1,"column":4259}},{"source":"builder.ts","name":null,"original":{"line":519,"column":34},"generated":{"line":1,"column":4276}},{"source":"builder.ts","name":null,"original":{"line":519,"column":53},"generated":{"line":1,"column":4278}},{"source":"builder.ts","name":null,"original":{"line":519,"column":65},"generated":{"line":1,"column":4287}},{"source":"builder.ts","name":null,"original":{"line":520,"column":12},"generated":{"line":1,"column":4290}},{"source":"builder.ts","name":null,"original":{"line":520,"column":31},"generated":{"line":1,"column":4304}},{"source":"builder.ts","name":null,"original":{"line":520,"column":68},"generated":{"line":1,"column":4307}},{"source":"builder.ts","name":null,"original":{"line":520,"column":47},"generated":{"line":1,"column":4317}},{"source":"builder.ts","name":null,"original":{"line":520,"column":78},"generated":{"line":1,"column":4319}},{"source":"builder.ts","name":null,"original":{"line":520,"column":85},"generated":{"line":1,"column":4323}},{"source":"builder.ts","name":null,"original":{"line":520,"column":97},"generated":{"line":1,"column":4331}},{"source":"builder.ts","name":null,"original":{"line":521,"column":10},"generated":{"line":1,"column":4333}},{"source":"builder.ts","name":null,"original":{"line":521,"column":71},"generated":{"line":1,"column":4335}},{"source":"builder.ts","name":null,"original":{"line":521,"column":50},"generated":{"line":1,"column":4345}},{"source":"builder.ts","name":null,"original":{"line":521,"column":81},"generated":{"line":1,"column":4347}},{"source":"builder.ts","name":null,"original":{"line":521,"column":92},"generated":{"line":1,"column":4356}},{"source":"builder.ts","name":null,"original":{"line":522,"column":4},"generated":{"line":1,"column":4369}},{"source":"builder.ts","name":null,"original":{"line":522,"column":11},"generated":{"line":1,"column":4376}},{"source":"builder.ts","name":null,"original":{"line":522,"column":28},"generated":{"line":1,"column":4392}},{"source":"builder.ts","name":null,"original":{"line":523,"column":8},"generated":{"line":1,"column":4395}},{"source":"builder.ts","name":null,"original":{"line":523,"column":12},"generated":{"line":1,"column":4399}},{"source":"builder.ts","name":null,"original":{"line":523,"column":24},"generated":{"line":1,"column":4401}},{"source":"builder.ts","name":null,"original":{"line":524,"column":12},"generated":{"line":1,"column":4403}},{"source":"builder.ts","name":null,"original":{"line":524,"column":22},"generated":{"line":1,"column":4405}},{"source":"builder.ts","name":null,"original":{"line":524,"column":30},"generated":{"line":1,"column":4407}},{"source":"builder.ts","name":null,"original":{"line":524,"column":34},"generated":{"line":1,"column":4411}},{"source":"builder.ts","name":null,"original":{"line":525,"column":8},"generated":{"line":1,"column":4414}},{"source":"builder.ts","name":null,"original":{"line":525,"column":19},"generated":{"line":1,"column":4424}},{"source":"builder.ts","name":null,"original":{"line":525,"column":25},"generated":{"line":1,"column":4430}},{"source":"builder.ts","name":null,"original":{"line":525,"column":34},"generated":{"line":1,"column":4435}},{"source":"builder.ts","name":null,"original":{"line":526,"column":16},"generated":{"line":1,"column":4437}},{"source":"builder.ts","name":null,"original":{"line":526,"column":24},"generated":{"line":1,"column":4439}},{"source":"builder.ts","name":null,"original":{"line":526,"column":31},"generated":{"line":1,"column":4446}},{"source":"builder.ts","name":null,"original":{"line":526,"column":38},"generated":{"line":1,"column":4449}},{"source":"builder.ts","name":null,"original":{"line":526,"column":55},"generated":{"line":1,"column":4453}},{"source":"builder.ts","name":null,"original":{"line":527,"column":18},"generated":{"line":1,"column":4458}},{"source":"builder.ts","name":null,"original":{"line":527,"column":38},"generated":{"line":1,"column":4468}},{"source":"builder.ts","name":null,"original":{"line":527,"column":46},"generated":{"line":1,"column":4470}},{"source":"builder.ts","name":null,"original":{"line":530,"column":12},"generated":{"line":1,"column":4483}},{"source":"builder.ts","name":null,"original":{"line":530,"column":20},"generated":{"line":1,"column":4485}},{"source":"builder.ts","name":null,"original":{"line":530,"column":29},"generated":{"line":1,"column":4494}},{"source":"builder.ts","name":null,"original":{"line":530,"column":38},"generated":{"line":1,"column":4501}},{"source":"builder.ts","name":null,"original":{"line":530,"column":57},"generated":{"line":1,"column":4504}},{"source":"builder.ts","name":null,"original":{"line":530,"column":43},"generated":{"line":1,"column":4508}},{"source":"builder.ts","name":null,"original":{"line":531,"column":18},"generated":{"line":1,"column":4519}},{"source":"builder.ts","name":null,"original":{"line":531,"column":26},"generated":{"line":1,"column":4521}},{"source":"builder.ts","name":null,"original":{"line":444,"column":0},"generated":{"line":1,"column":4534}},{"source":"builder.ts","name":null,"original":{"line":444,"column":0},"generated":{"line":1,"column":4542}},{"source":"builder.ts","name":null,"original":{"line":444,"column":0},"generated":{"line":1,"column":4563}}],"sources":{"builder.ts":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n"},"lineCount":null}},"error":null,"hash":"455b9a130d02703754330ecb816173cf","cacheData":{"env":{}}}