{"id":"LL1r","dependencies":[{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\struct.js.map","includedInParent":true,"mtime":1742306052307},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\package.json","includedInParent":true,"mtime":1742305948236},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\package.json","includedInParent":true,"mtime":1742306051652},{"name":"../schema","loc":{"line":19,"column":25,"index":903},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\struct.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\schema.js"},{"name":"../builder","loc":{"line":20,"column":26,"index":943},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\struct.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js"},{"name":"../type","loc":{"line":21,"column":23,"index":981},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\struct.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\type.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"../schema\"),t=require(\"../builder\"),r=require(\"../type\");class i extends t.Builder{addChild(t,i=`${this.numChildren}`){const s=this.children.push(t);return this.type=new r.Struct([...this.type.children,new e.Field(i,t.type,!0)]),s}}exports.StructBuilder=i;"},"sourceMaps":{"js":{"mappings":[{"source":"builder/struct.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":68}},{"source":"builder/struct.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":74}},{"source":"builder/struct.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":76}},{"source":"builder/struct.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":1,"column":84}},{"source":"builder/struct.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":97}},{"source":"builder/struct.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":99}},{"source":"builder/struct.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":107}},{"source":"builder/struct.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":121}},{"source":"builder/struct.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":123}},{"source":"builder/struct.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":131}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":142}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":13},"generated":{"line":1,"column":148}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":93},"generated":{"line":1,"column":158}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":93},"generated":{"line":1,"column":160}},{"source":"builder/struct.ts","name":null,"original":{"line":24,"column":11},"generated":{"line":1,"column":168}},{"source":"builder/struct.ts","name":null,"original":{"line":24,"column":20},"generated":{"line":1,"column":177}},{"source":"builder/struct.ts","name":null,"original":{"line":24,"column":36},"generated":{"line":1,"column":179}},{"source":"builder/struct.ts","name":null,"original":{"line":24,"column":46},"generated":{"line":1,"column":184}},{"source":"builder/struct.ts","name":null,"original":{"line":24,"column":51},"generated":{"line":1,"column":189}},{"source":"builder/struct.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":204}},{"source":"builder/struct.ts","name":null,"original":{"line":25,"column":14},"generated":{"line":1,"column":210}},{"source":"builder/struct.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":1,"column":212}},{"source":"builder/struct.ts","name":null,"original":{"line":25,"column":32},"generated":{"line":1,"column":217}},{"source":"builder/struct.ts","name":null,"original":{"line":25,"column":41},"generated":{"line":1,"column":226}},{"source":"builder/struct.ts","name":null,"original":{"line":25,"column":46},"generated":{"line":1,"column":231}},{"source":"builder/struct.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":1,"column":234}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":241}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":1,"column":246}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":1,"column":251}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":255}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":1,"column":257}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":31},"generated":{"line":1,"column":264}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":35},"generated":{"line":1,"column":268}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":40},"generated":{"line":1,"column":273}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":45},"generated":{"line":1,"column":278}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":55},"generated":{"line":1,"column":287}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":59},"generated":{"line":1,"column":291}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":59},"generated":{"line":1,"column":293}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":65},"generated":{"line":1,"column":299}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":71},"generated":{"line":1,"column":301}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":77},"generated":{"line":1,"column":303}},{"source":"builder/struct.ts","name":null,"original":{"line":26,"column":83},"generated":{"line":1,"column":309}},{"source":"builder/struct.ts","name":null,"original":{"line":27,"column":15},"generated":{"line":1,"column":314}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":317}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":325}},{"source":"builder/struct.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":339}}],"sources":{"builder/struct.ts":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"42b20f694e6234337ee758c6816cec60","cacheData":{"env":{}}}