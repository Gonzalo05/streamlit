{"id":"p3J4","dependencies":[{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\bool.js.map","includedInParent":true,"mtime":1742306051848},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\package.json","includedInParent":true,"mtime":1742305948236},{"name":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\package.json","includedInParent":true,"mtime":1742306051652},{"name":"./buffer","loc":{"line":19,"column":25,"index":903},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\bool.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\buffer.js"},{"name":"../builder","loc":{"line":20,"column":26,"index":942},"parent":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder\\bool.js","resolved":"C:\\Users\\gonza\\OneDrive\\Documents\\CS\\Streamlit\\my_map_component\\frontend\\node_modules\\apache-arrow\\builder.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});const e=require(\"./buffer\"),r=require(\"../builder\");class s extends r.Builder{constructor(r){super(r),this._values=new e.BitmapBufferBuilder}setValue(e,r){this._values.set(e,+r)}}exports.BoolBuilder=s;"},"sourceMaps":{"js":{"mappings":[{"source":"builder/bool.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":68}},{"source":"builder/bool.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":74}},{"source":"builder/bool.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":76}},{"source":"builder/bool.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":84}},{"source":"builder/bool.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":96}},{"source":"builder/bool.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":98}},{"source":"builder/bool.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":1,"column":106}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":120}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":13},"generated":{"line":1,"column":126}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":46},"generated":{"line":1,"column":136}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":46},"generated":{"line":1,"column":138}},{"source":"builder/bool.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":1,"column":146}},{"source":"builder/bool.ts","name":null,"original":{"line":24,"column":16},"generated":{"line":1,"column":158}},{"source":"builder/bool.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":161}},{"source":"builder/bool.ts","name":null,"original":{"line":25,"column":14},"generated":{"line":1,"column":167}},{"source":"builder/bool.ts","name":null,"original":{"line":26,"column":8},"generated":{"line":1,"column":170}},{"source":"builder/bool.ts","name":null,"original":{"line":26,"column":13},"generated":{"line":1,"column":175}},{"source":"builder/bool.ts","name":null,"original":{"line":26,"column":23},"generated":{"line":1,"column":183}},{"source":"builder/bool.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":1,"column":187}},{"source":"builder/bool.ts","name":null,"original":{"line":26,"column":27},"generated":{"line":1,"column":189}},{"source":"builder/bool.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":1,"column":209}},{"source":"builder/bool.ts","name":null,"original":{"line":28,"column":20},"generated":{"line":1,"column":218}},{"source":"builder/bool.ts","name":null,"original":{"line":28,"column":35},"generated":{"line":1,"column":220}},{"source":"builder/bool.ts","name":null,"original":{"line":29,"column":8},"generated":{"line":1,"column":223}},{"source":"builder/bool.ts","name":null,"original":{"line":29,"column":13},"generated":{"line":1,"column":228}},{"source":"builder/bool.ts","name":null,"original":{"line":29,"column":21},"generated":{"line":1,"column":236}},{"source":"builder/bool.ts","name":null,"original":{"line":29,"column":25},"generated":{"line":1,"column":240}},{"source":"builder/bool.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":1,"column":243}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":247}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":255}},{"source":"builder/bool.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":267}}],"sources":{"builder/bool.ts":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n"},"lineCount":null}},"error":null,"hash":"dd1e2249b586aa96ec9cb6c8f229f297","cacheData":{"env":{}}}