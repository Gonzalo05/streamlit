import streamlit as st
import pandas as pd
import numpy as np
import pydeck as pdk

# Set up the page configuration
st.set_page_config(
    page_title="EV Charging App",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- (Optional) CUSTOM CSS FOR CLEANER LOOK ---
# You can tweak the widths, font sizes, or hide Streamlit's default menu
st.markdown(
    """
    <style>
    /* Hide the default Streamlit hamburger menu and footer */
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    
    /* Adjust sidebar (drawer) width if desired */
    .css-1d391kg {
        width: 300px;
    }
    
    /* Adjust main panel's padding */
    .css-18e3th9 {
        padding-top: 1rem;
    }
    
    .stMainBlockContainer {
        padding-top: 1rem;
    }
    
    div[data-testid="stTextInput"] label {display: none;}
    
    /* Example of styling headings or text */
    .sidebar-text {
        font-size: 1rem;
        margin: 0.25rem 0;
    }
    
    .stDeckGlJsonChart{
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100vw;
    }
    #deckgl-wrapper{
        height: 100vh !important;
    }
    .st-emotion-cache-0{
        z-index: 1;
    }
    .st-emotion-cache-13k62yr{
        z-index: -2;
    }
    .e6rk8up5:has(#search-now){
        background-color: #ffffffe3;
        padding: 20px;
        padding-top: 0;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        border-radius: 15px;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# -------------- SIDEBAR (Drawer) --------------
# "Hello Phil" greeting
st.sidebar.markdown("<h2>Hello Phil</h2>", unsafe_allow_html=True)

# Display balance and charges
col1, col2 = st.sidebar.columns([1,1])
with col1:
    st.metric(label="kWh Charged", value="50")
with col2:
    st.metric(label="Charges", value="7")

# Withdraw button
withdraw_clicked = st.sidebar.button("Withdraw")

st.sidebar.markdown("---")

# Navigation items
if st.sidebar.button("Profile"):
    st.session_state["menu"] = "Profile"
if st.sidebar.button("My Bookings"):
    st.session_state["menu"] = "My Bookings"
if st.sidebar.button("My Chargers"):
    st.session_state["menu"] = "My Chargers"
if st.sidebar.button("Privacy"):
    st.session_state["menu"] = "Privacy"
if st.sidebar.button("Help"):
    st.session_state["menu"] = "Help"

st.sidebar.markdown("---")

# Log Out button
logout_clicked = st.sidebar.button("Log Out")

# Version info at bottom
st.sidebar.write("Version 2.3.1")

# -------------- MAIN CONTENT (Home Screen) --------------
with st.container():
    st.title("Search Now!")
    search_location = st.text_input("", placeholder="Search for a location...")

map_data = pd.DataFrame([
    {"name": "Location A", "info": "Random info about A", "lat": 33.77, "lon": -84.38},
    {"name": "Location B", "info": "Some interesting fact about B", "lat": 33.76, "lon": -84.40},
    {"name": "Location C", "info": "This location has special deals", "lat": 33.78, "lon": -84.36},
])

# Define a Scatterplot layer
layer = pdk.Layer(
    "ScatterplotLayer",
    data=map_data,
    pickable=True,       # Must be True for tooltip to appear
    autoHighlight=True,  # Optional: highlight point on hover
    get_position="[lon, lat]",
    get_fill_color="[200, 30, 0, 160]",
    get_radius=1000
)

# Add a tooltip that references fields in your data
tooltip = {
    "html": "<b>Location:</b> {name}<br/><b>Info:</b> {info}",
    "style": {
        "backgroundColor": "white",
        "border-radius": "10px",
        "box-shadow": "2px 2px 10px rgba(0, 0, 0, 0.1)"
    }
}

# Create the deck
r = pdk.Deck(
    layers=[layer],
    initial_view_state=pdk.ViewState(latitude=33.77, longitude=-84.38, zoom=11),
    tooltip=tooltip,
    map_style="mapbox://styles/mapbox/light-v9"
)

st.pydeck_chart(r)


with st.container():
    st.write("### Current Charge")
    st.write("Battery: 80%")  # Example placeholder
